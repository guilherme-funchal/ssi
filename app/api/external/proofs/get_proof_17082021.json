{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ],
    "$_POST": [
      {
        "type": "text",
        "name": "id"
      },
      {
        "type": "text",
        "name": "email"
      },
      {
        "type": "text",
        "name": "connection_id"
      },
      {
        "type": "array",
        "name": "record",
        "sub": [
          {
            "type": "text",
            "name": "connection_id"
          },
          {
            "type": "text",
            "name": "to"
          },
          {
            "type": "text",
            "name": "content"
          },
          {
            "type": "date",
            "name": "NOW_UTC"
          },
          {
            "type": "text",
            "name": "state"
          },
          {
            "type": "text",
            "name": "message_id"
          },
          {
            "type": "text",
            "name": "email"
          },
          {
            "type": "text",
            "name": "proof_attr"
          },
          {
            "type": "text",
            "name": "$_COOKIE"
          },
          {
            "type": "text",
            "name": "'Dados solicitados'+proof_name+' '"
          },
          {
            "type": "text",
            "name": "'Dados solicitados '+proof_name+' por '+$_COOKIE"
          }
        ]
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "api_key",
        "module": "core",
        "action": "setvalue",
        "options": {
          "key": "api_key",
          "value": "{{$_ENV.API_KEY}}"
        }
      },
      {
        "name": "connection_id",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{$_POST.connection_id}}",
          "key": "connection_id"
        }
      },
      {
        "name": "email",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{$_POST.email}}"
        }
      },
      {
        "name": "token",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{$_COOKIE.token}}"
        },
        "outputType": "text"
      },
      {
        "name": "query",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "ssi",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "proofs",
                "column": "id"
              },
              {
                "table": "proofs",
                "column": "name"
              },
              {
                "table": "proofs",
                "column": "description"
              },
              {
                "table": "proofs",
                "column": "req_attrs"
              },
              {
                "table": "proofs",
                "column": "predicates"
              },
              {
                "table": "proofs",
                "column": "schema"
              },
              {
                "table": "proofs",
                "column": "state"
              },
              {
                "table": "proofs",
                "column": "date"
              },
              {
                "table": "proofs",
                "column": "valid"
              },
              {
                "table": "proofs",
                "column": "id_user"
              }
            ],
            "table": {
              "name": "proofs"
            },
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "proofs.id",
                  "field": "proofs.id",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{$_POST.id}}",
                  "data": {
                    "table": "proofs",
                    "column": "id",
                    "type": "number"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "SELECT id, name, description, req_attrs, predicates, schema, state, date, valid, id_user\nFROM proofs\nWHERE id = :P1 /* {{$_POST.id}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_POST.id}}"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "id",
            "type": "text"
          },
          {
            "name": "name",
            "type": "text"
          },
          {
            "name": "description",
            "type": "text"
          },
          {
            "name": "req_attrs",
            "type": "text"
          },
          {
            "name": "predicates",
            "type": "text"
          },
          {
            "name": "schema",
            "type": "text"
          },
          {
            "name": "state",
            "type": "text"
          },
          {
            "name": "date",
            "type": "datetime"
          },
          {
            "name": "valid",
            "type": "text"
          },
          {
            "name": "id_user",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "proof_name",
        "module": "core",
        "action": "setvalue",
        "options": {
          "key": "proof_name",
          "value": "{{query[0].name}}"
        }
      },
      {
        "name": "schema_id",
        "module": "core",
        "action": "setvalue",
        "options": {
          "key": "schema_id",
          "value": "{{query[0].schema}}"
        }
      },
      {
        "name": "json_attributes",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{",
          "key": "json_attributes"
        }
      },
      {
        "name": "predicates",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{query[0].predicates}}",
          "key": "predicates"
        }
      },
      {
        "name": "attr",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{query[0].req_attrs}}"
        }
      },
      {
        "name": "attributes",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{attr.split(',')}}",
          "key": "attributes"
        }
      },
      {
        "name": "size",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{attributes.count()}}",
          "key": "size"
        }
      },
      {
        "name": "repeat",
        "module": "core",
        "action": "repeat",
        "options": {
          "repeat": "{{attributes}}",
          "outputFields": [],
          "exec": {
            "steps": {
              "name": "",
              "module": "core",
              "action": "condition",
              "options": {
                "if": "{{size==1}}",
                "then": {
                  "steps": [
                    {
                      "name": "header",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "value": "{\"connection_id\": \"{{connection_id}}\", \"proof_request\": \n\t{\"name\": \"{{proof_name}}\", \n\t\t\"version\": \"1.0\", \n\t\t\"requested_attributes\":{",
                        "key": "header"
                      },
                      "output": true
                    },
                    {
                      "name": "json_attributes",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "value": "\"{{$value}}_referent\":{\"name\":\"{{$value}}\",\"non_revoked\":{\"to\":1629201865}}}",
                        "key": "json_attributes"
                      },
                      "outputType": "text"
                    },
                    {
                      "name": "basement",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "value": ",\"requested_predicates\":{}}}",
                        "key": "basement"
                      }
                    }
                  ]
                },
                "else": {
                  "steps": [
                    {
                      "name": "header",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "value": "{\"connection_id\": \"{{connection_id}}\", \"proof_request\": \n\t{\"name\": \"{{proof_name}}\", \n\t\t\"version\": \"1.0\", \n\t\t\"requested_attributes\":",
                        "key": "header"
                      },
                      "output": true
                    },
                    {
                      "name": "json_attributes_tmp",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "value": "\"{{$value}}_referent\":{\"name\":\"{{$value}}\",\"non_revoked\":{\"to\":1629201865}}",
                        "key": "json_attributes_tmp"
                      },
                      "outputType": "text"
                    },
                    {
                      "name": "json_attributes",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "value": "{{json_attributes+json_attributes_tmp}}",
                        "key": "json_attributes"
                      }
                    },
                    {
                      "name": "basement",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "value": "},\"requested_predicates\":{}}}",
                        "key": "basement"
                      }
                    }
                  ]
                }
              },
              "outputType": "boolean"
            }
          }
        },
        "output": true,
        "meta": [
          {
            "name": "$index",
            "type": "number"
          },
          {
            "name": "$number",
            "type": "number"
          },
          {
            "name": "$name",
            "type": "text"
          },
          {
            "name": "$value",
            "type": "object"
          },
          {
            "name": "header",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "json_attributes",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{header+json_attributes+basement}}",
          "key": "json_attributes"
        }
      },
      {
        "name": "json_attributes",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{json_attributes.replace('}}\"', '}},\"')}}",
          "key": "json_attributes"
        }
      },
      {
        "name": "json_attributes",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{json_attributes.replace('}}\"', '}},\"')}}",
          "key": "json_attributes"
        }
      },
      {
        "name": "json_attributes",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{json_attributes.parseJSON()}}",
          "key": "json_attributes"
        }
      },
      {
        "name": "api",
        "module": "api",
        "action": "send",
        "options": {
          "url": "https://{{$_ENV.REST_HOST}}:{{$_ENV.REST_PORT}}/present-proof/send-request",
          "dataType": "json",
          "method": "POST",
          "headers": {
            "Authorization": "{{'Bearer '+token}}",
            "Accept": "application/json"
          },
          "data": "{{json_attributes}}"
        },
        "output": true
      },
      {
        "name": "api_messages",
        "module": "api",
        "action": "send",
        "options": {
          "url": "{{$_ENV.WEBHOOK}}/new_messages",
          "headers": {
            "Authorization": "{{'Bearer '+api_key}}"
          },
          "schema": []
        },
        "output": true,
        "meta": [
          {
            "type": "array",
            "name": "data",
            "sub": [
              {
                "type": "text",
                "name": "$value"
              }
            ]
          },
          {
            "type": "object",
            "name": "headers",
            "sub": [
              {
                "type": "text",
                "name": "content-length"
              },
              {
                "type": "text",
                "name": "content-type"
              },
              {
                "type": "text",
                "name": "date"
              },
              {
                "type": "text",
                "name": "server"
              }
            ]
          }
        ],
        "outputType": "object"
      },
      {
        "name": "repeat1",
        "module": "core",
        "action": "repeat",
        "options": {
          "repeat": "{{api_messages.data}}",
          "outputFields": [],
          "exec": {
            "steps": [
              {
                "name": "msg",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "key": "msg",
                  "value": "{{$value}}"
                }
              },
              {
                "name": "msg",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "key": "msg",
                  "value": "{{msg.parseJSON()}}"
                }
              },
              {
                "name": "proof_attr",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{msg.body.presentation.requested_proof.self_attested_attrs}}",
                  "key": "proof_attr"
                }
              },
              {
                "name": "proof_attr",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{proof_attr.toJSON()}}",
                  "key": "proof_attr"
                }
              },
              {
                "name": "proof_attr",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{proof_attr.sort(' ')}}",
                  "key": "proof_attr"
                }
              },
              {
                "name": "proof_attr",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{proof_attr.replace('_referent', '')}}",
                  "key": "proof_attr"
                }
              },
              {
                "name": "proof_attr",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{proof_attr.replace('\"','')}}",
                  "key": "proof_attr"
                }
              },
              {
                "name": "proof_attr",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{proof_attr.replace('\\{','')}}",
                  "key": "proof_attr"
                }
              },
              {
                "name": "proof_attr",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{proof_attr.replace('\\}','')}}",
                  "key": "proof_attr"
                }
              },
              {
                "name": "message_id",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "key": "message_id",
                  "value": "{{msg.body.thread_id}}"
                }
              },
              {
                "name": "pres_exc_id",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "key": "pres_exc_id",
                  "value": "{{msg.body.presentation_exchange_id}}"
                }
              },
              {
                "name": "insert",
                "module": "dbupdater",
                "action": "insert",
                "options": {
                  "connection": "ssi",
                  "sql": {
                    "type": "insert",
                    "values": [
                      {
                        "table": "messages",
                        "column": "connection_id",
                        "type": "text",
                        "value": "{{connection_id}}"
                      },
                      {
                        "table": "messages",
                        "column": "from",
                        "type": "text",
                        "value": "{{email}}"
                      },
                      {
                        "table": "messages",
                        "column": "to",
                        "type": "text",
                        "value": "{{$_COOKIE.email}}"
                      },
                      {
                        "table": "messages",
                        "column": "content",
                        "type": "text",
                        "value": "{{proof_attr}}"
                      },
                      {
                        "table": "messages",
                        "column": "date",
                        "type": "date",
                        "value": "{{NOW_UTC}}"
                      },
                      {
                        "table": "messages",
                        "column": "topic",
                        "type": "text",
                        "value": "Prova recebida"
                      },
                      {
                        "table": "messages",
                        "column": "state",
                        "type": "text",
                        "value": "Apresentação reconhecida"
                      },
                      {
                        "table": "messages",
                        "column": "message_id",
                        "type": "text",
                        "value": "{{message_id}}"
                      }
                    ],
                    "table": "messages",
                    "returning": "message_id",
                    "query": "INSERT INTO messages\n(connection_id, from, to, content, date, topic, state, message_id) VALUES (:P1 /* {{connection_id}} */, :P2 /* {{email}} */, :P3 /* {{$_COOKIE.email}} */, :P4 /* {{proof_attr}} */, :P5 /* {{NOW_UTC}} */, 'Prova recebida', 'Apresentação reconhecida', :P6 /* {{message_id}} */)",
                    "params": [
                      {
                        "name": ":P1",
                        "type": "expression",
                        "value": "{{connection_id}}"
                      },
                      {
                        "name": ":P2",
                        "type": "expression",
                        "value": "{{email}}"
                      },
                      {
                        "name": ":P3",
                        "type": "expression",
                        "value": "{{$_COOKIE.email}}"
                      },
                      {
                        "name": ":P4",
                        "type": "expression",
                        "value": "{{proof_attr}}"
                      },
                      {
                        "name": ":P5",
                        "type": "expression",
                        "value": "{{NOW_UTC}}"
                      },
                      {
                        "name": ":P6",
                        "type": "expression",
                        "value": "{{message_id}}"
                      }
                    ]
                  }
                },
                "meta": [
                  {
                    "name": "identity",
                    "type": "text"
                  },
                  {
                    "name": "affected",
                    "type": "number"
                  }
                ]
              },
              {
                "name": "insert_aviso",
                "module": "dbupdater",
                "action": "insert",
                "options": {
                  "connection": "ssi",
                  "sql": {
                    "type": "insert",
                    "values": [
                      {
                        "table": "messages",
                        "column": "connection_id",
                        "type": "text",
                        "value": "{{connection_id}}"
                      },
                      {
                        "table": "messages",
                        "column": "from",
                        "type": "text",
                        "value": "{{$_COOKIE.email}}"
                      },
                      {
                        "table": "messages",
                        "column": "to",
                        "type": "text",
                        "value": "{{email}}"
                      },
                      {
                        "table": "messages",
                        "column": "content",
                        "type": "text",
                        "value": "{{'Dados solicitados '+proof_name+' por '+$_COOKIE.email}}"
                      },
                      {
                        "table": "messages",
                        "column": "date",
                        "type": "date",
                        "value": "{{NOW_UTC}}"
                      },
                      {
                        "table": "messages",
                        "column": "topic",
                        "type": "text",
                        "value": "Prova enviada"
                      },
                      {
                        "table": "messages",
                        "column": "state",
                        "type": "text",
                        "value": "Apresentação enviada"
                      },
                      {
                        "table": "messages",
                        "column": "message_id",
                        "type": "text",
                        "value": "{{message_id}}-b"
                      }
                    ],
                    "table": "messages",
                    "returning": "message_id",
                    "query": "INSERT INTO messages\n(connection_id, from, to, content, date, topic, state, message_id) VALUES (:P1 /* {{connection_id}} */, :P2 /* {{$_COOKIE.email}} */, :P3 /* {{email}} */, :P4 /* {{'Dados solicitados '+proof_name+' por '+$_COOKIE.email}} */, :P5 /* {{NOW_UTC}} */, 'Prova enviada', 'Apresentação enviada', :P6 /* {{message_id}}-b */)",
                    "params": [
                      {
                        "name": ":P1",
                        "type": "expression",
                        "value": "{{connection_id}}"
                      },
                      {
                        "name": ":P2",
                        "type": "expression",
                        "value": "{{$_COOKIE.email}}"
                      },
                      {
                        "name": ":P3",
                        "type": "expression",
                        "value": "{{email}}"
                      },
                      {
                        "name": ":P4",
                        "type": "expression",
                        "value": "{{'Dados solicitados '+proof_name+' por '+$_COOKIE.email}}"
                      },
                      {
                        "name": ":P5",
                        "type": "expression",
                        "value": "{{NOW_UTC}}"
                      },
                      {
                        "name": ":P6",
                        "type": "expression",
                        "value": "{{message_id}}-b"
                      }
                    ]
                  }
                },
                "meta": [
                  {
                    "name": "identity",
                    "type": "text"
                  },
                  {
                    "name": "affected",
                    "type": "number"
                  }
                ]
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "$index",
            "type": "number"
          },
          {
            "name": "$number",
            "type": "number"
          },
          {
            "name": "$name",
            "type": "text"
          },
          {
            "name": "$value",
            "type": "text"
          }
        ],
        "outputType": "array"
      }
    ]
  }
}