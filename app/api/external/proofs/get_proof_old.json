{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ],
    "$_POST": [
      {
        "type": "text",
        "name": "id"
      },
      {
        "type": "text",
        "name": "email"
      },
      {
        "type": "text",
        "name": "connection_id"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "api_key",
        "module": "core",
        "action": "setvalue",
        "options": {
          "key": "api_key",
          "value": "{{$_ENV.API_KEY}}"
        }
      },
      {
        "name": "email",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{$_POST.email}}"
        }
      },
      {
        "name": "query",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "ssi",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "proofs",
                "column": "id"
              },
              {
                "table": "proofs",
                "column": "name"
              },
              {
                "table": "proofs",
                "column": "description"
              },
              {
                "table": "proofs",
                "column": "req_attrs"
              },
              {
                "table": "proofs",
                "column": "predicates"
              },
              {
                "table": "proofs",
                "column": "schema"
              },
              {
                "table": "proofs",
                "column": "state"
              },
              {
                "table": "proofs",
                "column": "date"
              },
              {
                "table": "proofs",
                "column": "valid"
              },
              {
                "table": "proofs",
                "column": "id_user"
              }
            ],
            "table": {
              "name": "proofs"
            },
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "proofs.id",
                  "field": "proofs.id",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{$_POST.id}}",
                  "data": {
                    "table": "proofs",
                    "column": "id",
                    "type": "number"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "SELECT id, name, description, req_attrs, predicates, schema, state, date, valid, id_user\nFROM proofs\nWHERE id = :P1 /* {{$_POST.id}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_POST.id}}"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "id",
            "type": "text"
          },
          {
            "name": "name",
            "type": "text"
          },
          {
            "name": "description",
            "type": "text"
          },
          {
            "name": "req_attrs",
            "type": "text"
          },
          {
            "name": "predicates",
            "type": "text"
          },
          {
            "name": "schema",
            "type": "text"
          },
          {
            "name": "state",
            "type": "text"
          },
          {
            "name": "date",
            "type": "datetime"
          },
          {
            "name": "valid",
            "type": "text"
          },
          {
            "name": "id_user",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "atributos",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{query[0].req_attrs}}"
        }
      },
      {
        "name": "schema_id",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{query[0].schema}}"
        }
      },
      {
        "name": "token",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{$_COOKIE.token}}"
        },
        "outputType": "text"
      },
      {
        "name": "issuer_did",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{query[0].schema.split(':')[0]}}"
        }
      },
      {
        "name": "connection_id",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{$_POST.connection_id}}"
        }
      },
      {
        "name": "schema_name",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{query[0].schema.split(':')[2]}}"
        }
      },
      {
        "name": "api_cred_def",
        "module": "api",
        "action": "send",
        "options": {
          "url": "https://{{$_ENV.REST_HOST}}:{{$_ENV.REST_PORT}}/credential-definitions/created?schema_id={{schema_id}}",
          "headers": {
            "Authorization": "{{'Bearer '+token}}"
          }
        },
        "output": true
      },
      {
        "name": "cred_def_id",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{api_cred_def.data.credential_definition_ids}}"
        }
      },
      {
        "name": "cred_def_id",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{cred_def_id.toJSON()}}"
        },
        "disabled": true
      },
      {
        "name": "cred_def_id",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{cred_def_id[0]}}"
        }
      },
      {
        "name": "schema_issuer_did",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{issuer_did}}"
        }
      },
      {
        "name": "api",
        "module": "api",
        "action": "send",
        "options": {
          "url": "https://{{$_ENV.REST_HOST}}:{{$_ENV.REST_PORT}}/present-proof/send-request",
          "method": "POST",
          "dataType": "json",
          "data": {
            "comment": "string",
            "connection_id": "{{connection_id}}",
            "proof_request": {
              "name": "Proof request",
              "non_revoked": {
                "to": 1619697667
              },
              "nonce": "1234567890",
              "requested_attributes": {
                "additionalProp1": {
                  "name": "dados",
                  "non_revoked": {
                    "to": 1619697667
                  }
                }
              },
              "requested_predicates": {
                "additionalProp1": {
                  "name": "{{atributos}}",
                  "non_revoked": {
                    "to": 1619697667
                  },
                  "p_type": ">=",
                  "p_value": 0,
                  "restrictions": [
                    {
                      "cred_def_id": "{{cred_def_id}}",
                      "issuer_did": "{{issuer_did}}",
                      "schema_id": "{{schema_id}}",
                      "schema_issuer_did": "{{schema_issuer_did}}",
                      "schema_name": "{{schema_name}}",
                      "schema_version": "1.0"
                    }
                  ]
                }
              },
              "version": "1.0"
            },
            "trace": false
          },
          "headers": {
            "Authorization": "{{'Bearer '+token}}"
          }
        },
        "output": true
      },
      {
        "name": "api_messages",
        "module": "api",
        "action": "send",
        "options": {
          "url": "http://{{$_ENV.WEBHOOK}}/new_messages",
          "headers": {
            "Authorization": "{{'Bearer '+api_key}}"
          }
        },
        "output": true,
        "disabled": true
      }
    ]
  }
}