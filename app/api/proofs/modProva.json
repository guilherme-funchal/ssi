{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ],
    "$_POST": [
      {
        "type": "text",
        "fieldName": "operator",
        "name": "operator"
      },
      {
        "type": "text",
        "fieldName": "name",
        "name": "name"
      },
      {
        "type": "text",
        "fieldName": "description",
        "name": "description"
      },
      {
        "type": "text",
        "fieldName": "req_attrs",
        "name": "req_attrs"
      },
      {
        "type": "text",
        "fieldName": "predicates",
        "name": "predicates"
      },
      {
        "type": "text",
        "fieldName": "schema",
        "name": "schema"
      },
      {
        "type": "text",
        "fieldName": "state",
        "name": "state"
      },
      {
        "type": "date",
        "fieldName": "valid",
        "name": "valid"
      },
      {
        "type": "text",
        "fieldName": "name",
        "name": "name"
      },
      {
        "type": "text",
        "fieldName": "description",
        "name": "description"
      },
      {
        "type": "text",
        "fieldName": "req_attrs",
        "name": "req_attrs"
      },
      {
        "type": "text",
        "fieldName": "predicates",
        "name": "predicates"
      },
      {
        "type": "text",
        "fieldName": "schema",
        "name": "schema"
      },
      {
        "type": "text",
        "fieldName": "state",
        "name": "state"
      },
      {
        "type": "datetime",
        "name": "date"
      },
      {
        "type": "date",
        "fieldName": "valid",
        "name": "valid"
      },
      {
        "type": "number",
        "name": "id"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "query",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "ssi",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "users",
                "column": "id"
              },
              {
                "table": "users",
                "column": "email"
              }
            ],
            "table": {
              "name": "users"
            },
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "users.email",
                  "field": "users.email",
                  "type": "string",
                  "operator": "equal",
                  "value": "{{$_COOKIE.email}}",
                  "data": {
                    "table": "users",
                    "column": "email",
                    "type": "text"
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "SELECT id, email\nFROM users\nWHERE email = :P1 /* {{$_COOKIE.email}} */",
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_COOKIE.email}}"
              }
            ]
          }
        },
        "output": true,
        "meta": [
          {
            "name": "id",
            "type": "text"
          },
          {
            "name": "email",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "id_user",
        "module": "core",
        "action": "setvalue",
        "options": {
          "key": "id_user",
          "value": "{{query[0].id}}"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.operator == 'add'}}",
          "then": {
            "steps": [
              {
                "name": "query1",
                "module": "dbconnector",
                "action": "select",
                "options": {
                  "connection": "ssi",
                  "sql": {
                    "type": "SELECT",
                    "columns": [
                      {
                        "table": "proofs",
                        "column": "id_user"
                      },
                      {
                        "table": "proofs",
                        "column": "schema"
                      }
                    ],
                    "table": {
                      "name": "proofs"
                    },
                    "joins": [],
                    "wheres": {
                      "condition": "AND",
                      "rules": [
                        {
                          "id": "proofs.id_user",
                          "field": "proofs.id_user",
                          "type": "string",
                          "operator": "equal",
                          "value": "{{id_user}}",
                          "data": {
                            "table": "proofs",
                            "column": "id_user",
                            "type": "text"
                          },
                          "operation": "="
                        },
                        {
                          "id": "proofs.schema",
                          "field": "proofs.schema",
                          "type": "string",
                          "operator": "equal",
                          "value": "{{$_POST.schema}}",
                          "data": {
                            "table": "proofs",
                            "column": "schema",
                            "type": "text"
                          },
                          "operation": "="
                        }
                      ],
                      "conditional": null,
                      "valid": true
                    },
                    "query": "SELECT id_user, schema\nFROM proofs\nWHERE id_user = :P1 /* {{id_user}} */ AND schema = :P2 /* {{$_POST.schema}} */",
                    "params": [
                      {
                        "operator": "equal",
                        "type": "expression",
                        "name": ":P1",
                        "value": "{{id_user}}"
                      },
                      {
                        "operator": "equal",
                        "type": "expression",
                        "name": ":P2",
                        "value": "{{$_POST.schema}}"
                      }
                    ]
                  }
                },
                "output": true,
                "meta": [
                  {
                    "name": "id_user",
                    "type": "text"
                  },
                  {
                    "name": "schema",
                    "type": "text"
                  }
                ],
                "outputType": "array"
              },
              {
                "name": "test",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{query1[0].schema}}"
                }
              },
              {
                "name": "",
                "module": "core",
                "action": "condition",
                "options": {
                  "if": "{{test == null}}",
                  "then": {
                    "steps": {
                      "name": "insert",
                      "module": "dbupdater",
                      "action": "insert",
                      "options": {
                        "connection": "ssi",
                        "sql": {
                          "type": "insert",
                          "values": [
                            {
                              "table": "proofs",
                              "column": "name",
                              "type": "text",
                              "value": "{{$_POST.name}}"
                            },
                            {
                              "table": "proofs",
                              "column": "description",
                              "type": "text",
                              "value": "{{$_POST.description}}"
                            },
                            {
                              "table": "proofs",
                              "column": "req_attrs",
                              "type": "text",
                              "value": "{{$_POST.req_attrs.replace('{}', '')}}"
                            },
                            {
                              "table": "proofs",
                              "column": "predicates",
                              "type": "text",
                              "value": "{{$_POST.predicates}}"
                            },
                            {
                              "table": "proofs",
                              "column": "schema",
                              "type": "text",
                              "value": "{{$_POST.schema}}"
                            },
                            {
                              "table": "proofs",
                              "column": "state",
                              "type": "text",
                              "value": "{{$_POST.state}}"
                            },
                            {
                              "table": "proofs",
                              "column": "date",
                              "type": "datetime",
                              "value": "{{NOW_UTC}}"
                            },
                            {
                              "table": "proofs",
                              "column": "valid",
                              "type": "date",
                              "value": "{{$_POST.valid}}"
                            },
                            {
                              "table": "proofs",
                              "column": "id_user",
                              "type": "text",
                              "value": "{{id_user}}"
                            }
                          ],
                          "table": "proofs",
                          "returning": "id",
                          "query": "INSERT INTO proofs\n(name, description, req_attrs, predicates, schema, state, date, valid, id_user) VALUES (:P1 /* {{$_POST.name}} */, :P2 /* {{$_POST.description}} */, :P3 /* {{$_POST.req_attrs.replace('{}', '')}} */, :P4 /* {{$_POST.predicates}} */, :P5 /* {{$_POST.schema}} */, :P6 /* {{$_POST.state}} */, :P7 /* {{NOW_UTC}} */, :P8 /* {{$_POST.valid}} */, :P9 /* {{id_user}} */)",
                          "params": [
                            {
                              "name": ":P1",
                              "type": "expression",
                              "value": "{{$_POST.name}}"
                            },
                            {
                              "name": ":P2",
                              "type": "expression",
                              "value": "{{$_POST.description}}"
                            },
                            {
                              "name": ":P3",
                              "type": "expression",
                              "value": "{{$_POST.req_attrs.replace('{}', '')}}"
                            },
                            {
                              "name": ":P4",
                              "type": "expression",
                              "value": "{{$_POST.predicates}}"
                            },
                            {
                              "name": ":P5",
                              "type": "expression",
                              "value": "{{$_POST.schema}}"
                            },
                            {
                              "name": ":P6",
                              "type": "expression",
                              "value": "{{$_POST.state}}"
                            },
                            {
                              "name": ":P7",
                              "type": "expression",
                              "value": "{{NOW_UTC}}"
                            },
                            {
                              "name": ":P8",
                              "type": "expression",
                              "value": "{{$_POST.valid}}"
                            },
                            {
                              "name": ":P9",
                              "type": "expression",
                              "value": "{{id_user}}"
                            }
                          ]
                        }
                      },
                      "meta": [
                        {
                          "name": "identity",
                          "type": "text"
                        },
                        {
                          "name": "affected",
                          "type": "number"
                        }
                      ]
                    }
                  },
                  "else": {
                    "steps": {
                      "name": "existe",
                      "module": "core",
                      "action": "response",
                      "options": {
                        "status": 406,
                        "data": "Já existe"
                      }
                    }
                  }
                },
                "outputType": "boolean"
              }
            ]
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.operator == 'update'}}",
          "then": {
            "steps": {
              "name": "update",
              "module": "dbupdater",
              "action": "update",
              "options": {
                "connection": "ssi",
                "sql": {
                  "type": "update",
                  "values": [
                    {
                      "table": "provas",
                      "column": "name",
                      "type": "text",
                      "value": "{{$_POST.name}}"
                    },
                    {
                      "table": "provas",
                      "column": "description",
                      "type": "text",
                      "value": "{{$_POST.description}}"
                    },
                    {
                      "table": "provas",
                      "column": "req_attrs",
                      "type": "text",
                      "value": "{{$_POST.req_attrs.replace('{}', '')}}"
                    },
                    {
                      "table": "provas",
                      "column": "schema",
                      "type": "text",
                      "value": "{{$_POST.schema}}"
                    },
                    {
                      "table": "proofs",
                      "column": "predicates",
                      "type": "text",
                      "value": "{{$_POST.predicates}}"
                    },
                    {
                      "table": "proofs",
                      "column": "state",
                      "type": "text",
                      "value": "{{$_POST.state}}"
                    },
                    {
                      "table": "proofs",
                      "column": "date",
                      "type": "datetime",
                      "value": "{{NOW_UTC}}"
                    },
                    {
                      "table": "proofs",
                      "column": "valid",
                      "type": "date",
                      "value": "{{$_POST.valid}}"
                    },
                    {
                      "table": "proofs",
                      "column": "id_user",
                      "type": "text",
                      "value": "{{id_user}}"
                    }
                  ],
                  "table": "proofs",
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "id",
                        "type": "double",
                        "operator": "equal",
                        "value": "{{$_POST.id}}",
                        "data": {
                          "column": "id"
                        },
                        "operation": "="
                      }
                    ]
                  },
                  "query": "UPDATE proofs\nSET name = :P1 /* {{$_POST.name}} */, description = :P2 /* {{$_POST.description}} */, req_attrs = :P3 /* {{$_POST.req_attrs.replace('{}', '')}} */, schema = :P4 /* {{$_POST.schema}} */, predicates = :P5 /* {{$_POST.predicates}} */, state = :P6 /* {{$_POST.state}} */, date = :P7 /* {{NOW_UTC}} */, valid = :P8 /* {{$_POST.valid}} */, id_user = :P9 /* {{id_user}} */\nWHERE id = :P10 /* {{$_POST.id}} */",
                  "params": [
                    {
                      "name": ":P1",
                      "type": "expression",
                      "value": "{{$_POST.name}}"
                    },
                    {
                      "name": ":P2",
                      "type": "expression",
                      "value": "{{$_POST.description}}"
                    },
                    {
                      "name": ":P3",
                      "type": "expression",
                      "value": "{{$_POST.req_attrs.replace('{}', '')}}"
                    },
                    {
                      "name": ":P4",
                      "type": "expression",
                      "value": "{{$_POST.schema}}"
                    },
                    {
                      "name": ":P5",
                      "type": "expression",
                      "value": "{{$_POST.predicates}}"
                    },
                    {
                      "name": ":P6",
                      "type": "expression",
                      "value": "{{$_POST.state}}"
                    },
                    {
                      "name": ":P7",
                      "type": "expression",
                      "value": "{{NOW_UTC}}"
                    },
                    {
                      "name": ":P8",
                      "type": "expression",
                      "value": "{{$_POST.valid}}"
                    },
                    {
                      "name": ":P9",
                      "type": "expression",
                      "value": "{{id_user}}"
                    },
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P10",
                      "value": "{{$_POST.id}}"
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "affected",
                  "type": "number"
                }
              ]
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.operator == 'delete'}}",
          "then": {
            "steps": {
              "name": "delete",
              "module": "dbupdater",
              "action": "delete",
              "options": {
                "connection": "ssi",
                "sql": {
                  "type": "delete",
                  "table": "proofs",
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "id",
                        "type": "double",
                        "operator": "equal",
                        "value": "{{$_POST.id}}",
                        "data": {
                          "column": "id"
                        },
                        "operation": "="
                      }
                    ]
                  },
                  "query": "DELETE\nFROM proofs\nWHERE id = :P1 /* {{$_POST.id}} */",
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{$_POST.id}}"
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "affected",
                  "type": "number"
                }
              ]
            }
          }
        },
        "outputType": "boolean"
      }
    ]
  }
}